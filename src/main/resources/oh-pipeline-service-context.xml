<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package="sk.openhouse.automation.pipelineservice.resource" />
    <context:property-placeholder location="classpath:oh-pipeline-service.properties,classpath:oh-pipeline-service-jdbc.properties" />

    <!-- resources -->
    <bean name="rootResource" class="sk.openhouse.automation.pipelineservice.resource.RootResource">
        <constructor-arg name="rootResourceService" ref="rootResourceService" />
    </bean>

    <bean name="schemaResource" class="sk.openhouse.automation.pipelineservice.resource.SchemaResource">
        <constructor-arg name="schemaService" ref="schemaService" />
    </bean>

    <bean name="schemaRequestResource" class="sk.openhouse.automation.pipelineservice.resource.SchemaRequestResource">
        <constructor-arg name="schemaService" ref="schemaService" />
    </bean>

    <bean name="projectsResource" class="sk.openhouse.automation.pipelineservice.resource.ProjectsResource">
        <constructor-arg name="projectService" ref="projectService" />
    </bean>

    <bean name="projectResource" class="sk.openhouse.automation.pipelineservice.resource.ProjectResource">
        <constructor-arg name="projectService" ref="projectService" />
    </bean>

    <bean name="versionsResource" class="sk.openhouse.automation.pipelineservice.resource.VersionsResource">
        <constructor-arg name="versionService" ref="versionService" />
    </bean>

    <bean name="versionResource" class="sk.openhouse.automation.pipelineservice.resource.VersionResource">
        <constructor-arg name="versionService" ref="versionService" />
    </bean>

    <bean name="buildsResource" class="sk.openhouse.automation.pipelineservice.resource.BuildsResource">
        <constructor-arg name="buildService" ref="buildService" />
    </bean>

    <bean name="buildResource" class="sk.openhouse.automation.pipelineservice.resource.BuildResource">
        <constructor-arg name="buildService" ref="buildService" />
    </bean>

    <bean name="buildPhasesResource" class="sk.openhouse.automation.pipelineservice.resource.BuildPhasesResource">
        <constructor-arg name="buildPhaseService" ref="buildPhaseService" />
    </bean>

    <bean name="buildPhaseResource" class="sk.openhouse.automation.pipelineservice.resource.BuildPhaseResource">
        <constructor-arg name="buildPhaseService" ref="buildPhaseService" />
    </bean>

    <bean name="phasesResource" class="sk.openhouse.automation.pipelineservice.resource.PhasesResource">
        <constructor-arg name="phaseService" ref="phaseService" />
    </bean>

    <bean name="phaseResource" class="sk.openhouse.automation.pipelineservice.resource.PhaseResource">
        <constructor-arg name="phaseService" ref="phaseService" />
    </bean>

    <bean name="linkService" class="sk.openhouse.automation.pipelineservice.service.impl.LinkServiceImpl">
        <constructor-arg name="rootUri" value="${httpUtil.rootUri}" />
    </bean>

    <bean name="httpUtil" class="sk.openhouse.automation.pipelineservice.util.impl.HttpUtilImpl">
        <constructor-arg name="client" ref="client" />
    </bean>

    <bean id="client" class="com.sun.jersey.api.client.Client" factory-method="create" />

    <!-- imports -->
    <import resource="oh-pipeline-service-datasource.xml" />
    <import resource="oh-pipeline-service-dao.xml" />
    <import resource="oh-pipeline-service-service.xml" />

</beans>
